{"version":3,"file":"static/js/Cast.a61dcbf2.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,GAAAA,IAAA,mCAAsCF,IAF1D,uBAEKG,EAFL,EAEKA,KAFL,kBAIIA,GAJJ,+IAUA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAaC,GAA9C,kGAEoBC,MAAM,GAAD,OACvBR,EADuB,gCACSC,EADT,iCACyCK,EADzC,iBAC6DC,EAD7D,yBAFzB,cAEGE,EAFH,gBAMsBA,EAASC,OAN/B,cAMGC,EANH,yBAOIA,GAPJ,kJAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kGAEoBL,MAAM,GAAD,OACvBR,EADuB,iBACNa,EADM,oBACcZ,EADd,oBAFzB,cAEGQ,EAFH,gBAKwBA,EAASC,OALjC,cAKGI,EALH,yBAMIA,GANJ,kJAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,kGAEoBL,MAAM,GAAD,OACvBR,EADuB,iBACNa,EADM,4BACsBZ,EADtB,oBAFzB,cAEGQ,EAFH,gBAMwBA,EAASC,OANjC,cAMGM,EANH,yBAOIA,GAPJ,kJAaA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCJ,EAAUK,GAA3C,kGAEoBV,MAAM,GAAD,OACvBR,EADuB,iBACNa,EADM,4BACsBZ,EADtB,gCACqDiB,IAH9E,cAEGT,EAFH,gBAMwBA,EAASC,OANjC,cAMGS,EANH,yBAOIA,GAPJ,kJAjDPhB,EAAAA,GAAAA,SAAAA,QAAyBH,C,8ECMZoB,GAAMC,EAAAA,EAAAA,GAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,8HClBWC,EAAOT,EAAAA,EAAAA,GAAH,0KAGR,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAEM,SAAAQ,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IACJ,SAAAQ,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IACQ,qBAAGS,MAAkBC,OAAOC,MAA5B,IAITC,EAAOd,EAAAA,EAAAA,GAAH,gTAMO,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAChB,SAAAQ,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAEG,SAAAQ,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IACQ,qBAAGS,MAAkBC,OAAOC,MAA5B,IAKTE,EAAMf,EAAAA,EAAAA,IAAH,0G,uCCnBD,SAASgB,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACR5B,EAAAA,EAAAA,IAAkB0B,GAASG,MAAK,SAAAC,GAAC,OAAIL,EAAQK,EAAEN,KAAd,GAClC,GAAE,CAACE,IAGFF,IACE,SAACT,EAAD,UACGS,EAAKO,KAAI,SAAAC,GAAI,OACZ,UAACZ,EAAD,YACE,SAACC,EAAD,CACEY,IACED,EAAKE,aAAL,yCACsCF,EAAKE,cACvCC,EAENC,IAAKJ,EAAKK,QAEZ,uBAAIL,EAAKK,QACT,UAAChC,EAAA,EAAD,CAAKiC,QAAQ,OAAOC,cAAc,SAASC,WAAW,SAAtD,WACE,uCACA,uBAAIR,EAAKS,iBAZFT,EAAKU,GADJ,KAoBrB,C","sources":["api/fetch-data.js","components/Box.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '45b0d9a735c6cd370fbf9bc7890ca93c';\n\n// Test Axios\naxios.defaults.baseURL = BASE_URL;\nexport async function fetchTrending() {\n  try {\n    const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchSearchMovies(searchQuery, searchPage) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${searchPage}&include_adult=false`\n    );\n\n    const searchList = await response.json();\n    return searchList;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchMovieDetails(movie_id) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n    );\n    const movieDetails = await response.json();\n    return movieDetails;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchMovieCredits(movie_id) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    const movieCredits = await response.json();\n    return movieCredits;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchMovieReviews(movie_id, reviewsPage) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=${reviewsPage}`\n    );\n\n    const movieReviews = await response.json();\n    return movieReviews;\n  } catch (error) {\n    return error;\n  }\n}\n","import styled from '@emotion/styled';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  grid,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  grid\n);\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[4]}px;\n\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[4]}px;\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: calc((100% - ${p => p.theme.space[4]}px*7) / 8);\n  gap: ${p => p.theme.space[4]}px;\n\n  padding: ${p => p.theme.space[4]}px;\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 20px;\n  box-shadow: 5px 5px 10px -5px rgba(64, 64, 64, 0.75);\n`;\n\nexport const Img = styled.img`\n  width: 130px;\n  height: 150px;\n  object-fit: cover;\n\n  border-radius: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'api/fetch-data';\n\nimport { List, Img, Item } from './Cast.styled';\nimport { useState, useEffect } from 'react';\n\nimport photo_Pattern from '../../images/photo_Pattern.jpg';\nimport { Box } from 'components/Box';\n\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCredits(movieId).then(r => setCast(r.cast));\n  }, [movieId]);\n\n  return (\n    cast && (\n      <List>\n        {cast.map(item => (\n          <Item key={item.id}>\n            <Img\n              src={\n                item.profile_path\n                  ? `https://image.tmdb.org/t/p/w500${item.profile_path}`\n                  : photo_Pattern\n              }\n              alt={item.name}\n            />\n            <p>{item.name}</p>\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n              <p>Character:</p>\n              <p>{item.character}</p>\n            </Box>\n          </Item>\n        ))}\n      </List>\n    )\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchTrending","axios","data","fetchSearchMovies","searchQuery","searchPage","fetch","response","json","searchList","fetchMovieDetails","movie_id","movieDetails","fetchMovieCredits","movieCredits","fetchMovieReviews","reviewsPage","movieReviews","Box","styled","color","space","layout","flexbox","background","border","position","grid","List","p","theme","colors","accent","Item","Img","Cast","useState","cast","setCast","movieId","useParams","useEffect","then","r","map","item","src","profile_path","photo_Pattern","alt","name","display","flexDirection","alignItems","character","id"],"sourceRoot":""}