{"version":3,"file":"static/js/Movies.45bed401.chunk.js","mappings":"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","sources":["api/fetch-data.js","components/Box.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '45b0d9a735c6cd370fbf9bc7890ca93c';\n\n// Test Axios\naxios.defaults.baseURL = BASE_URL;\nexport async function fetchTrending() {\n  try {\n    const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchSearchMovies(searchQuery, searchPage) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${searchPage}&include_adult=false`\n    );\n\n    const searchList = await response.json();\n    return searchList;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchMovieDetails(movie_id) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n    );\n    const movieDetails = await response.json();\n    return movieDetails;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchMovieCredits(movie_id) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    const movieCredits = await response.json();\n    return movieCredits;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchMovieReviews(movie_id, reviewsPage) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=${reviewsPage}`\n    );\n\n    const movieReviews = await response.json();\n    return movieReviews;\n  } catch (error) {\n    return error;\n  }\n}\n","import styled from '@emotion/styled';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  grid,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  grid\n);\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const Input = styled.input`\n  width: ${p => p.theme.space[8]}px;\n  height: ${p => p.theme.space[5]}px;\n\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[4]}px;\n\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 20px;\n\n  &&:focus-within {\n    outline: 2px solid ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.space[2]}px;\n\n  height: ${p => p.theme.space[5]}px;\n\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[4]}px;\n\n  background-color: ${({ theme }) => theme.colors.mainBg};\n\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 20px;\n\n  &&:hover,\n  &&:focus {\n    color: ${({ theme }) => theme.colors.mainBg};\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n\n// List----------------------------\nexport const List = styled.ul`\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-left: ${p => p.theme.space[4]}px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.space[3]}px;\n\n  padding: ${p => p.theme.space[1]}px;\n`;\n\nexport const LinkStyled = styled(NavLink)`\n  padding: ${p => p.theme.space[2]}px;\n\n  &&:hover,\n  &&:focus {\n    outline: 1px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 5px;\n  }\n`;\n","import { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { BiSearch, BiCameraMovie } from 'react-icons/bi';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { ThreeDots } from 'react-loader-spinner';\n\nimport { Box } from 'components/Box';\nimport { fetchSearchMovies } from 'api/fetch-data';\n\nimport {\n  SearchButton,\n  Form,\n  Input,\n  List,\n  Item,\n  LinkStyled,\n} from './Movies.styled';\nimport { useEffect } from 'react';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [listMovies, setListMovies] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\n    () => searchParams.get('query') ?? ''\n  );\n  const [isLoader, setIsLoader] = useState(false);\n\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsLoader(true);\n    const inputValue = e.target.searchMovie.value.trim();\n\n    if (inputValue === '') {\n      setIsLoader(false);\n      Notify.failure('Input something :)');\n      return;\n    }\n\n    setSearchParams({ query: inputValue });\n\n    fetchSearchMovies(inputValue, 1).then(r => {\n      if (r.results.length === 0) {\n        setIsLoader(false);\n        Notify.failure('We do not nothing :(');\n        return;\n      }\n      setListMovies(r.results);\n      setIsLoader(false);\n    });\n  };\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    if (searchQuery !== '') {\n      fetchSearchMovies(searchQuery, 1).then(r => {\n        setListMovies(r.results);\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Box p={20}>\n      {isLoader ? (\n        <ThreeDots color=\"#dc758a\" />\n      ) : (\n        <>\n          <Form onSubmit={handleSubmit}>\n            <label>\n              <Input\n                type=\"text\"\n                placeholder=\"Input name movie\"\n                name=\"searchMovie\"\n                value={searchQuery}\n                onChange={handleChange}\n              />\n            </label>\n            <SearchButton type=\"submit\">\n              <BiSearch />\n              <span>Search</span>\n            </SearchButton>\n          </Form>\n          {listMovies && (\n            <List>\n              {listMovies.map(item => (\n                <Item key={item.id}>\n                  <BiCameraMovie color=\"#dc758a\" />\n                  <LinkStyled to={`${item.id}`} state={location}>\n                    {item.title || item.name}\n                  </LinkStyled>\n                </Item>\n              ))}\n            </List>\n          )}\n        </>\n      )}\n    </Box>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchTrending","axios","data","fetchSearchMovies","searchQuery","searchPage","fetch","response","json","searchList","fetchMovieDetails","movie_id","movieDetails","fetchMovieCredits","movieCredits","fetchMovieReviews","reviewsPage","movieReviews","Box","styled","color","space","layout","flexbox","background","border","position","grid","Form","p","theme","Input","colors","accent","SearchButton","mainBg","List","Item","LinkStyled","NavLink","Movies","useSearchParams","searchParams","setSearchParams","useState","listMovies","setListMovies","get","setSearchQuery","isLoader","setIsLoader","location","useLocation","useEffect","then","r","results","onSubmit","e","preventDefault","inputValue","target","searchMovie","value","trim","Notify","query","length","type","placeholder","name","onChange","map","item","to","id","state","title"],"sourceRoot":""}