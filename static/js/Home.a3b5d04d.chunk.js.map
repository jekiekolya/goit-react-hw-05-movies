{"version":3,"file":"static/js/Home.a3b5d04d.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,GAAAA,IAAA,mCAAsCF,IAF1D,uBAEKG,EAFL,EAEKA,KAFL,kBAIIA,GAJJ,+IAUA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAaC,GAA9C,kGAEoBC,MAAM,GAAD,OACvBR,EADuB,gCACSC,EADT,iCACyCK,EADzC,iBAC6DC,EAD7D,yBAFzB,cAEGE,EAFH,gBAMsBA,EAASC,OAN/B,cAMGC,EANH,yBAOIA,GAPJ,kJAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kGAEoBL,MAAM,GAAD,OACvBR,EADuB,iBACNa,EADM,oBACcZ,EADd,oBAFzB,cAEGQ,EAFH,gBAKwBA,EAASC,OALjC,cAKGI,EALH,yBAMIA,GANJ,kJAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,kGAEoBL,MAAM,GAAD,OACvBR,EADuB,iBACNa,EADM,4BACsBZ,EADtB,oBAFzB,cAEGQ,EAFH,gBAMwBA,EAASC,OANjC,cAMGM,EANH,yBAOIA,GAPJ,kJAaA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCJ,EAAUK,GAA3C,kGAEoBV,MAAM,GAAD,OACvBR,EADuB,iBACNa,EADM,4BACsBZ,EADtB,gCACqDiB,IAH9E,cAEGT,EAFH,gBAMwBA,EAASC,OANjC,cAMGS,EANH,yBAOIA,GAPJ,kJAjDPhB,EAAAA,GAAAA,SAAAA,QAAyBH,C,8ECMZoB,GAAMC,EAAAA,EAAAA,GAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,wKCjBWC,EAAQT,EAAAA,EAAAA,GAAH,iDACC,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAGPU,EAAOZ,EAAAA,EAAAA,GAAH,+CACA,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAGLW,EAAOb,EAAAA,EAAAA,GAAH,sGAGR,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAEG,SAAAQ,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAGDY,GAAad,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,iIACV,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAGW,qBAAGS,MAAkBK,OAAOC,MAA5B,I,SCdV,SAASC,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,YACR3C,EAAAA,EAAAA,MAAgB4C,MAAK,SAAAC,GACnBL,EAAaK,EAAEC,QAChB,GACF,GAAE,KAGD,UAAC5B,EAAA,EAAD,CAAKW,EAAG,GAAR,WACE,SAACD,EAAD,6BACCW,IACC,SAACR,EAAD,UACGQ,EAAUQ,KAAI,SAAAC,GAAK,OAClB,UAAChB,EAAD,YACE,SAAC,MAAD,CAAeZ,MAAM,aACrB,SAACa,EAAD,CAAYgB,GAAE,iBAAYD,EAAME,IAAMC,MAAOV,EAA7C,SACGO,EAAMI,OAASJ,EAAMK,SAHfL,EAAME,GADC,QAY7B,C","sources":["api/fetch-data.js","components/Box.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '45b0d9a735c6cd370fbf9bc7890ca93c';\n\n// Test Axios\naxios.defaults.baseURL = BASE_URL;\nexport async function fetchTrending() {\n  try {\n    const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchSearchMovies(searchQuery, searchPage) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${searchPage}&include_adult=false`\n    );\n\n    const searchList = await response.json();\n    return searchList;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchMovieDetails(movie_id) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n    );\n    const movieDetails = await response.json();\n    return movieDetails;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchMovieCredits(movie_id) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    const movieCredits = await response.json();\n    return movieCredits;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function fetchMovieReviews(movie_id, reviewsPage) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=${reviewsPage}`\n    );\n\n    const movieReviews = await response.json();\n    return movieReviews;\n  } catch (error) {\n    return error;\n  }\n}\n","import styled from '@emotion/styled';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  grid,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  background,\n  border,\n  position,\n  grid\n);\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const List = styled.ul`\n  margin-left: ${p => p.theme.space[4]}px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.space[3]}px;\n\n  padding: ${p => p.theme.space[1]}px;\n`;\n\nexport const LinkStyled = styled(NavLink)`\n  padding: ${p => p.theme.space[2]}px;\n  &&:hover,\n  &&:focus {\n    outline: 1px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 5px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { BiCameraMovie } from 'react-icons/bi';\nimport { Box } from 'components/Box';\nimport { fetchTrending } from '../../api/fetch-data';\nimport { useState } from 'react';\n\nimport { LinkStyled, Item, Title, List } from './Home.styled';\n\nexport default function TrendList() {\n  const [trendList, setTrendList] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrending().then(r => {\n      setTrendList(r.results);\n    });\n  }, []);\n\n  return (\n    <Box p={30}>\n      <Title>Trending today</Title>\n      {trendList && (\n        <List>\n          {trendList.map(movie => (\n            <Item key={movie.id}>\n              <BiCameraMovie color=\"#dc758a\" />\n              <LinkStyled to={`movies/${movie.id}`} state={location}>\n                {movie.title || movie.name}\n              </LinkStyled>\n            </Item>\n          ))}\n        </List>\n      )}\n    </Box>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchTrending","axios","data","fetchSearchMovies","searchQuery","searchPage","fetch","response","json","searchList","fetchMovieDetails","movie_id","movieDetails","fetchMovieCredits","movieCredits","fetchMovieReviews","reviewsPage","movieReviews","Box","styled","color","space","layout","flexbox","background","border","position","grid","Title","p","theme","List","Item","LinkStyled","NavLink","colors","accent","TrendList","useState","trendList","setTrendList","location","useLocation","useEffect","then","r","results","map","movie","to","id","state","title","name"],"sourceRoot":""}